import java.util.function.Predicate;

public class passwordSt {
	
	static Predicate<Character> isDigit = (c -> Character.isDigit(c));
	static Predicate<Character> isUpper = (c -> Character.isUpperCase(c));
	static Predicate<Character> isLowerCase = (c -> Character.isLowerCase(c));
	static Predicate<String> isLenth = (c -> c.length()>=10);
	static Predicate<Character> isSpecialCharacter = (c -> { String specialChars =
	 "~`!@#$%^&*()-_=+\\|[{]};:'\",<.>/?";
	 return specialChars.contains(String.valueOf(c)); 
	 });
	
	public static void main(String[] args) {
		
		//System.out.println(calculatePasswordStrength("Nufu&YM21S"));
		System.out.println(checkString("Nufu&YM21S"));
		
	}
	
	static boolean passwordStrength(String pass) {
		boolean flag = false;
		char currentCharacter;

	    for (int i = 0; i < pass.length(); i++) {
			
	        currentCharacter = pass.charAt(i);
	        if(isDigit.or(isUpper).or(isLowerCase).or(isSpecialCharacter).test(currentCharacter) && isLenth.test((pass))) {
	        	flag = true;
	        }else {
	        	return false;
	        }
	    }
	    return flag;
		
	}
	
	static String checkString(String input) {
	    
	    char currentCharacter;
	    String result = null;
	    
		 
    Predicate<String> isLenth = (s -> s.length()>=10 );
	    
	    //Function<String, Pattern>
    boolean flag = false;

	    for (int i = 0; i < input.length(); i++) {
			
	        currentCharacter = input.charAt(i);
	        if(isDigit.or(isUpper).or(isLowerCase).or(isSpecialCharacter).test(currentCharacter) && isLenth.test((input))) {
	        	flag = true;
	        }else {
	        	flag = false;
	        }
	    }
		return result;
	}
	static int calculatePasswordStrength(String password){
	    
	    if( password.matches("^(?=.*?[A-Z])(?=(.*[a-z]){1,})(?=(.*[\\d]){1,})(?=(.*[\\W]){1,})(?!.*\\s).{10,}$" ) )
	    	
	        System.out.println(";;;;;;;;;;;");
	        
	    return 0;
	    
	}
	
	
	private static boolean checkS(String input) {
	    String specialChars = "~`!@#$%^&*()-_=+\\|[{]};:'\",<.>/?";
	    char currentCharacter;
	    boolean numberPresent = false;
	    boolean upperCasePresent = false;
	    boolean lowerCasePresent = false;
	    boolean specialCharacterPresent = false;

	    for (int i = 0; i < input.length(); i++) {
	        currentCharacter = input.charAt(i);
	        if (Character.isDigit(currentCharacter)) {
	            numberPresent = true;
	        } else if (Character.isUpperCase(currentCharacter)) {
	            upperCasePresent = true;
	        } else if (Character.isLowerCase(currentCharacter)) {
	            lowerCasePresent = true;
	        } else if (specialChars.contains(String.valueOf(currentCharacter))) {
	            specialCharacterPresent = true;
	        }
	    }
	    
	    if (numberPresent && upperCasePresent && lowerCasePresent && specialCharacterPresent) {
	    	
	    }else if(numberPresent && upperCasePresent && lowerCasePresent && specialCharacterPresent==false)

	    return
	      numberPresent && upperCasePresent && lowerCasePresent && specialCharacterPresent;
	}

}
